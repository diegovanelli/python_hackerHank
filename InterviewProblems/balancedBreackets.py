#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'isBalanced' function below.
#
# The function is expected to return a STRING.
# The function accepts STRING s as parameter.
#

def isBalanced(s):
    stack = []
    bracket_map = {')': '(', '}': '{', ']': '['}
    
    for char in s:
        if char in bracket_map.values():
            stack.append(char)
        elif char in bracket_map.keys():
            if stack == [] or bracket_map[char] != stack.pop():
                return 'NO'
        else:
            continue
    
    return 'YES' if stack == [] else 'NO'

if __name__ == '__main__':
    s = ['([{([]({}{}))[]}[{}]])()(()){}[()[]()]()()()[]{}{}()()()[()][[]([])()()[]]([]){}[{[][]}{}]{}{}[][]{}[](())(())()[({{}{[(())()[]]{[{}{()}{}]{[[]][[]]}()[]}}()(){[[]{}][()]()[{({})}][[([]()[{[]({(())()})}][]({})[])([{}]{()})]]}}){}{{()}}{[][[{}]][()[()]({[]{}(())})]}][{}[{}]]()()(())[[]]{[[{()}]]({})[]}({}{(([]))}[]){}[()(()[])]{}(({}))[][{}](){()}[]{({}([][][[]]))}[][((()[]({{}}[[{{[(({()}({}[[]][{([()])}({})][]{[[]{}]})())){}]{}}{()}{[][]}{}{}}][]([{}[[]{}({([]()(()()[]))})[]()]][()](()))[]]{}[[{[][]}[[[]]()[(){}][{[]{}}[{{{[]}}{}}][]([[{{()[]}[{[][{[[{[{}[]()[]]}{{}}{}]]}]}[]]}{}]][[]][{({}[])[[[{}][]]()[]]}{{[{}][]({}([][]{()}[()]){{}{}})}{}{}(([[]]()[]))()}][][{[({})[[]([[{[]}()]](([[]{}]{})))](){}[{}][]{[]}{[]([({{{}()}{[]}((){}{})}[[][]]{}[])]{})}]}{([()()[]][])}()([])])][([[]]()[])([[][]]){}[{[((([]){(){({[]})()}})){{}[()({({})}[[{[]{}}({{}[{{}{}}()]}){}]])]()}{}]{{}}}[]()]]{}{}]]]){}){}){()}()[]({}())]{()[]}[]{}{[]}(){[][[][]{}]}[{}{[{}{}]}]{[{}({}[()({{}})])()()]({[]}()((())))}']

    for i in s:
        print(isBalanced(i))